<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       ">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
		   <list>
		       <value>classpath:/postgresqldb.properties</value>
		       <value>classpath:/appstrings.properties</value>
		   </list> 
		</property>
	</bean>
	
	
	
	<bean class="java.net.URI" id="dbUrl">
		<constructor-arg value="#{systemEnvironment['DATABASE_URL']}" />
	</bean>

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<!-- Uncomment when developing -->
	 	<property name="url"
			value="${jdbc.connectionUrl}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		
		<!-- Uncomment when pushing to heroku -->
		<!-- <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() 
			+ ':' + @dbUrl.getPort() + @dbUrl.getPath() }" /> <property name="username" 
			value="#{ @dbUrl.getUserInfo().split(':')[0] }" /> <property name="password" 
			value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
		<property name="initialSize" value="2" />
		<property name="maxActive" value="5" /> -->
	</bean>
	

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="configLocation"
			value="classpath:hibernate.cfg.xml" /> -->
		<property name="packagesToScan">
		    <list>

		        <value>eu.nomme.shared</value>
		    </list>
		</property>
		
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${jdbc.hibernateDialect}
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			
			</props>
		</property>
	</bean>

	 <bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean> 

	<aop:config>
		<aop:pointcut id="webMethods" expression="execution(* com.etsyheroku.EtsyHeroku.web.*.*(..))" />
		<aop:pointcut id="serivceMethods" expression="execution(* eu.nomme.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="webMethods" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serivceMethods" />	
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice> 

</beans>